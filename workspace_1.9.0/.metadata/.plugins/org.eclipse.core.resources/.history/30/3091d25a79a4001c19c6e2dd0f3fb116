/*
 * SerialTask.h
 *
 *  Created on: Nov 26, 2020
 *      Author: Sergio
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "stm32f1xx_hal.h"
#include "main.h"

void CreateSerialTask();
void CreateSerialObjects(void);
void serialRxTask(void * parg);
void serialTxTask(void * parg);
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);

#ifdef __GNUC__

#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
#define GETCHAR_PROTOTYPE int __io_getchar(void)
#else
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#define GETCHAR_PROTOTYPE int fgetc(FILE *f)
#endif

PUTCHAR_PROTOTYPE {

	while(HAL_OK != HAL_UART_Transmit(&huart2, (uint8_t *) &ch, 1, 30000)){
		;
	}
	//xSemaphoreTake(xSemaphore, portMAX_DELAY);
	//HAL_UART_Transmit_IT(&huart2, (uint8_t*) &ch, 1);
	return ch;

}

GETCHAR_PROTOTYPE {

	uint8_t ch = 0;
	while (HAL_OK != HAL_UART_Receive(&huart2, (uint8_t*) &ch, 1, 30000)) {
		;
	}
	return ch;
}
